{"version":3,"file":"ngx-croppie.js.map","sources":["ng://ngx-croppie/src/app/modules/ngx-croppie/ngx-croppie.component.ts","ng://ngx-croppie/src/app/modules/ngx-croppie/ngx-croppie.module.ts"],"sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';\n\nimport * as Croppie from 'croppie';\nimport { CroppieOptions, ResultOptions, CropData } from 'croppie';\n\nexport type Type = 'canvas' | 'base64' | 'html' | 'blob' | 'rawcanvas';\n\n@Component({\n\t// tslint:disable-next-line:component-selector\n\tselector: 'ngx-croppie',\n\ttemplate: `<div #imageEdit (update)=\"newResult()\"></div>`\n})\nexport class NgxCroppieComponent implements OnInit {\n\t@ViewChild('imageEdit') imageEdit: ElementRef;\n\t@Input() croppieOptions: CroppieOptions;\n\t@Input() points: number[];\n\t@Input() outputFormatOptions: ResultOptions = { type: 'base64', size: 'viewport' };\n\t@Input() defaultZoom = 0;\n\t@Output() result: EventEmitter<string | HTMLElement | Blob | HTMLCanvasElement>\n\t\t= new EventEmitter<string | HTMLElement | Blob | HTMLCanvasElement>();\n\tprivate _croppie: Croppie;\n\tprivate imgUrl: string;\n\tget imageUrl(): string {\n\t\treturn this.imgUrl;\n\t}\n\t@Input() set imageUrl(url: string) {\n\t\tif(this.imgUrl === url) { return; }\n\t\tthis.imgUrl = url;\n\t\tif (this._croppie) {\n\t\t\tthis.bindToCroppie(this.imageUrl, this.points, this.defaultZoom);\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tthis._croppie = new Croppie(this.imageEdit.nativeElement, this.croppieOptions);\n\t\tthis.bindToCroppie(this.imageUrl, this.points, this.defaultZoom);\n\t}\n\n\tprivate bindToCroppie(url: string, points: number[], zoom: number){\n\t\tthis._croppie.bind({ url, points, zoom });\n\t}\n\n\tnewResult() {\n\t\tthis._croppie.result(this.outputFormatOptions).then((res) => {\n\t\t\tthis.result.emit(res);\n\t\t});\n\t}\n\n\trotate(degrees: 90 | 180 | 270 | -90 | -180 | -270) {\n\t\tthis._croppie.rotate(degrees);\n\t}\n\n\tget(): CropData {\n\t\treturn this._croppie.get();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxCroppieComponent } from './ngx-croppie.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxCroppieComponent],\n  exports: [\n    NgxCroppieComponent\n  ]\n})\nexport class NgxCroppieModule { }\n"],"names":[],"mappings":";;;;;;;;AAAA;;mCAgB+C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE;2BAC3D,CAAC;sBAErB,IAAI,YAAY,EAAmD;;IAGtE,sBAAI,yCAAQ;;;;QAAZ;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;SACnB;;;;;kBACqB,GAAW;YAChC,IAAG,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;gBAAE,OAAO;aAAE;YACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aACjE;;;;OAND;;;;IASD,sCAAQ;;;IAAR;QACC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACjE;;;;;;;IAEO,2CAAa;;;;;;cAAC,GAAW,EAAE,MAAgB,EAAE,IAAY;QAChE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,KAAA,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;;;;;IAG3C,uCAAS;;;IAAT;QAAA,iBAIC;QAHA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACvD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB,CAAC,CAAC;KACH;;;;;IAED,oCAAM;;;;IAAN,UAAO,OAA2C;QACjD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC9B;;;;IAED,iCAAG;;;IAAH;QACC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;KAC3B;;gBA/CD,SAAS,SAAC;;oBAEV,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,iDAA+C;iBACzD;;;;8BAEC,SAAS,SAAC,WAAW;mCACrB,KAAK;2BACL,KAAK;wCACL,KAAK;gCACL,KAAK;2BACL,MAAM;6BAON,KAAK;;8BAzBP;;;;;;;ACAA;;;;gBAIC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE;wBACP,mBAAmB;qBACpB;iBACF;;2BAZD;;;;;;;;;;;;;;;"}
